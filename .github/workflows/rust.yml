name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: release ${{ matrix.target }} (with non-required env)
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-apple-darwin
            archive: zip
    steps:
      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          EXTRA_FILES: "README.md"
          SRC_DIR: "atlas-coverage"
          ARCHIVE_TYPES: ${{ matrix.archive }}
          MINIFY: "yes"
  release_without_not_required:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        target: [x86_64-unknown-linux-musl]
    steps:
      - uses: actions/checkout@master
      - name: Compile and release
        uses: rust-build/rust-build.action@master
        with:
          RUSTTARGET: ${{ matrix.target }}
          UPLOAD_MODE: none
      - name: Checkout output
        run: ls -laR

  
